datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DB_URL")
}

generator client {
  // Global settings
  provider = "prisma-client-py"

  // Settings for "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = -1
}

/// Type of an event
enum EventType {
  /// Live event
  live
  /// Replay of a previous live event
  replay
  /// Prerecorded event
  prerecorded

  @@map("event_type")
}

/// Show data
model Show {
  /// Identifier of the show
  id          String  @id(map: "shows_pkey") @default(uuid()) @map("id") @db.Uuid
  /// Title of the show
  title       String  @unique(map: "title_unique") @map("title") @db.Text
  /// Description of the show
  description String? @map("description") @db.Text

  /// Events belonging to the show
  events Event[]

  @@map("shows")
}

/// Event data
model Event {
  /// Identifier of the event
  id     String    @id(map: "events_pkey") @default(uuid()) @map("id") @db.Uuid
  /// Type of the event
  type   EventType @map("type")
  /// Identifier of the show the event belongs to
  showId String    @map("show_id") @db.Uuid

  /// Show the event belongs to
  show Show @relation(fields: [showId], references: [id], map: "show_id_fkey", onDelete: NoAction, onUpdate: NoAction)

  @@map("events")
}
